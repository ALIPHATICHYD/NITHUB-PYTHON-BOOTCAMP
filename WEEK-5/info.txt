Comparison Operators 

* What are Comparison Operators?
- Comparison Operators are operators used in a programming language to compare two values and determine their relationship to one another.

* Uses of Comparison Operators
Comparison Operators are used for the following reasons;
- Comparison operators are used to compare two values and determine the relationship between them.
  This can be used to create conditions within programs that can be used to control the flow of the program.
  For example, if a program needs to check if a user supplied number that is greater than 10, a comparison operator can be used to check if the number is greater than 10.
  If so, the program can take the appropriate action.

- Comparison operators can also be used in combination with other operators for more complex comparisons.
  For example, a program can use a combination of comparison operators to check if a number is between two values, such as greater than 10 but less than 20.


* Operator and Operand
There are two sides to using a Comparison Operator. They are;

- Operator: An operator is a symbol that is used to perform an operation on one or more operands.
  Examples of common operators are arithmetic operators and logical operators. Operators can be combined with operands to form expressions.

- Operand: An operand is an object that is manipulated by an operator. It is usually a variable, a literal value, or a constant. 
  Operands can be combined with operators to form expressions. For example, in the expression 5 + 10, the values 5 and 10 are the operands and the + is the operator.


* Types of Comparison Operators in Python
In Python, there are several Comparison Operators. The common ones are;

- Equal to (==) : Checks if the values of two operands are equal, if yes then the condition becomes true. 

- Not equal to (!=): Checks if the values of two operands are not equal, if values are not equal then the condition becomes true.

- Less than (< ): Checks if the value of the left operand is less than the value of the right operand, if yes then the condition becomes true.

- Greater than (>): Checks if the value of the left operand is greater than the value of the right operand, if yes then the condition becomes true. 

- Less than or equal to (<=): Checks if the value of the left operand is less than or equal to the value of the right operand, if yes then the condition becomes true.

- Greater than or equal to (>=): Checks if the value of the left operand is greater than or equal to the value of the right operand, if yes then the condition becomes true. 


* More types of Comparison Operators in Python
Other Comparison Operators in Python are;

- Object identity (is): Checks if two values are the same object. This operator returns True if the two values are the same object, and False if they are not

- Negated object identity (is not): Checks if two values are not equal. This operator returns True if the two values are not equal and False if the two values are equal.

- Membership operator (in): Checks if a value is present in a sequence. This operator returns True if the value is present in the sequence, and False if it is not.

- Negated Membership operator (not in): Check if two values are not in the same object. This operator returns True if the two values are not the same object, and False if they are.

- Not operator (not): Used to reverse the result of a comparison operator. This operator returns False if the comparison operator returns True, and True if the comparison operator returns False.


* Summary
In summary;

1. Comparison operators are used to compare two values and determine the relationship between them.
2. Comparison operators can be used to create conditions within programs that can be used to control the flow of the program.
3. Comparison operators can be combined with other operators for more complex comparisons.
4. Comparison operators should be used with caution, as incorrect use can lead to unexpected results.





Exercises
* What is the purpose of a comparison Operators in Python?
* What are the six common comparison operators in Python?
* How does the == operatorr differ form the is operator in Python?
* What is the result os the exprrssion 10 < 5 in Python?
* What is the the result of the expression 5 >= 5 in Python?
* How does Python compare two strings using the <and> operator? 
* What is the result of the expression "apple" < "banana" in Python?
* What is the result of the expression "apple" == "Apple" in Python?
* How does Python compare two lists using the == operator?
* What is the result of the expression [1, 2, 3] != [1, 2, 4] in Python?
* What is the result of the expression "cat" in ["cat", "dog", "bird"] in Python?
* What is the result of the expression 5 < 2 or 10 > 2 in Python?
* What is the result of the expression 5 < 10 and 10 > 2 in Python?